name: Build and deploy

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

concurrency:
  group: ${{ github.workflow }}

permissions:
  packages: write

jobs:
  deploy:
    name: Deploy app
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      with:
        fetch-depth: 0

    - name: Install Nix
      uses: cachix/install-nix-action@91a071959513ca103b54280ac0bef5b825791d4d # v31
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}
        extra_nix_config: |
          trusted-substituters = https://cache.nixos.org https://nix-community.cachix.org
          trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs=

    - name: Restore and cache Nix store
      uses: nix-community/cache-nix-action@aee88ae5efbbeb38ac5d9862ecbebdb404a19e69 # v6.1.1
      with:
        primary-key: nix-${{ runner.os }}-${{ hashFiles('flake.lock') }}
        restore-prefixes-first-match: nix-${{ runner.os }}-
        gc-max-store-size-linux: 1073741824
        purge: true
        purge-prefixes: nix-${{ runner.os }}-
        purge-created: 0
        purge-primary-key: never

    - name: Log in to Fly.io Container Registry
      uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
      with:
        registry: registry.fly.io
        username: x
        password: ${{ secrets.FLY_API_TOKEN }}

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Deploy to fly.io
      shell: bash
      env:
        FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      run: |
        nix run .#container.copyToRegistry
        nix run .#flyctl deploy

    - name: Build and publish image to GitHub Container Registry
      shell: bash
      run: |
        nix run .#ghContainer.copyToRegistry

    - name: Get changelog entry
      id: changelog_reader
      uses: mindsers/changelog-reader-action@32aa5b4c155d76c94e4ec883a223c947b2f02656 # v2.2.3
      with:
        version: ${{ env.VERSION }}
        path: ./CHANGELOG.md

    - name: Create GitHub release
      shell: bash
      env:
        GITHUB_TOKEN: ${{ secrets.POST_RELEASE_GH_TOKEN }}
        CHANGELOG: ${{ steps.changelog_reader.outputs.changes }}
        GH_TOKEN: ${{ github.token }}
      run: |
        NOTES_FILE="$(mktemp)"
        printf "%s\n" "${CHANGELOG}" > "${NOTES_FILE}"

        VERSION="$(git tag -l | tail -n1)"

        gh release create "${VERSION}" --notes-file "${NOTES_FILE}" --title "${VERSION}"
